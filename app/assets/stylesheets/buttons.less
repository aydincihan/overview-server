@import "./variables.less";
@import "./mixins.less";

// Started with Twitter Bootstrap, then went nuts
// Only supports class="btn", "btn btn-danger", "btn btn-primary"

.btn-disabled() {
  cursor: default;
  background-color: darken(white, 10%);
  background-image: none;
  .opacity(65);
}

.btnBackground(@color1, @color2, @color3) {
  // +---+
  // |1 /|
  // | / |
  // |/  |
  // +   |
  // |   |
  // | 2 |
  // |   |
  // |   +
  // |  /|
  // | / |
  // |/ 3|
  // +---+
  // The background will be positioned such that only 1 and 2 are visible.
  // On hover, it will move such that only 2 and 3 are visible.

  @svg: "<svg xmlns='http://www.w3.org/2000/svg' width='100%' height='400%' viewBox='0 0 1 4' preserveAspectRatio='none'><rect fill='@{color1}' x='0' y='0' width='1' height='4'/><path fill='@{color2}' d='M0,1L1,0L1,4L0,4Z'/><path fill='@{color3}' d='M0,4L1,3.5L1,4L0,4Z'/></svg>";
  // IE11 doesn't understand these URLs when they aren't base64-encoded.
  // And yes, this base64 function was hand-coded (and then uglified): all the
  // ones online seem to assume UTF-8 input.
  @base64: ~`(function(a){for(var r="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",t="",c=0;c<a.length;){var h=a.charCodeAt(c++),A=a.charCodeAt(c++),e=a.charCodeAt(c++),o=h>>2,d=(3&h)<<4|A>>4,n=(15&A)<<2|e>>6,N=63&e;isNaN(A)?n=N=64:isNaN(e)&&(N=64),t+=r.charAt(o)+r.charAt(d)+r.charAt(n)+r.charAt(N)}return t})(@{svg})`;
  background-image: ~"url(data:image/svg+xml;base64,@{base64})";
  background-size: 100% 400%;
  background-position: 0 0;
  .transition(background-position .15s linear);

  &:active, &.active {
    background-color: @color1;
    background-image: none;
  }

  &:hover, &.hover, &:active, &.active, &.disabled, &[disabled] {
    background-position: 100% 100%;
  }

  &.disabled, &:disabled, &[disabled] {
    .btn-disabled();
  }
}

.btnColor(@color) {
  @shadowColor: contrast(@color);
  color: @color;
  text-shadow: 0 0 2px @shadowColor;

  &:hover, &.hover {
    color: @color; // override a:hover color
    text-shadow: 0 0 2px @shadowColor, 0 0 2px @shadowColor; // up contrast
  }

  &:disabled, &.disabled, &[disabled] {
    .btn-disabled();
    color: @color;
    text-shadow: none;
  }
}

.btn {
  display: inline-block;
  .button-size(@padding-base-vertical; @padding-base-horizontal; @font-size-base; @line-height-base; @border-radius-base);
  margin-bottom: 0; // For input.btn
  font-size: @font-size-base;
  line-height: @line-height-base;
  *line-height: @line-height-base;
  text-align: center;
  vertical-align: middle;
  cursor: pointer;
  border: 1px solid @btn-default-border;
  *border: 0; // Remove the border to prevent IE7's black border on input:focus
  border-bottom-color: darken(@btn-default-border, 10%);
  border-radius: @border-radius-base;

  // Focus state for keyboard and accessibility
  &:focus {
    .tab-focus();
  }

  // Active state
  &.active,
  &:active {
    outline: 0;
  }

  // Disabled state
  &.disabled,
  &:disabled,
  &[disabled] {
    .btn-disabled();
  }
}

a.btn:hover, a.btn.hover {
  text-decoration: none;
}

.btn {
  .btnColor(@btn-default-color);
  .btnBackground(@btn-default-bg, @btn-default-bg2, @btn-default-bg3);
}
.btn-primary {
  .btnColor(@btn-primary-color);
  .btnBackground(@btn-primary-bg, @btn-primary-bg2, @btn-primary-bg3);
}
// Danger and error appear as red
.btn-danger {
  .btnColor(@btn-danger-color);
  .btnBackground(@btn-danger-bg, @btn-danger-bg2, @btn-danger-bg3);
}

// Link buttons
// -------------------------

// Make a button look and behave like a link
.btn-link {
  color: @link-color;
  font-weight: normal;
  cursor: pointer;
  border-radius: 0;

  &,
  &:active,
  &[disabled],
  fieldset[disabled] & {
    background: transparent;
  }
  &,
  &:hover,
  &:focus,
  &:active {
    border-color: transparent;
  }
  &:hover,
  &:focus {
    color: @link-hover-color;
    text-decoration: underline;
    background-color: transparent;
  }
  &[disabled],
  fieldset[disabled] & {
    &:hover,
    &:focus {
      color: @btn-link-disabled-color;
      text-decoration: none;
    }
  }
}

// Button Sizes
// --------------------------------------------------

.btn-lg {
  // line-height: ensure even-numbered height of button next to large input
  .button-size(@padding-large-vertical; @padding-large-horizontal; @font-size-large; @line-height-large; @border-radius-large);
}
.btn-sm {
  // line-height: ensure proper height of button next to small input
  .button-size(@padding-small-vertical; @padding-small-horizontal; @font-size-small; @line-height-small; @border-radius-small);
}
.btn-xs {
  .button-size(@padding-xs-vertical; @padding-xs-horizontal; @font-size-small; @line-height-small; @border-radius-small);
}
